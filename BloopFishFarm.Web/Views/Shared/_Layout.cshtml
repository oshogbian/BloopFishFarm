<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Bloop Fish Farm</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body>
   <header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark bg-primary border-bottom box-shadow mb-3">
        <div class="container">
            <a class="navbar-brand" href="@Url.Action("Index", "Home")">
                <img src="~/images/image.png" alt="Bloop Fish Farm Logo" style="height: 30px; width: auto;" class="me-2" />
                <span class="fw-bold ocean-wave">BloopFishFarm</span>

            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
           <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
    <ul class="navbar-nav ms-auto">
        <li class="nav-item">
            <a class="nav-link" href="@Url.Action("Index", "Home")">Home</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@Url.Action("About", "Home")"><strong>About us</strong></a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@Url.Action("Contact", "Home")">Contact</a>
        </li>
    </ul>
</div>

        </div>
    </nav>
</header>

  
    
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

  <footer class="footer mt-auto py-4 bg-dark text-white"> 
        <div class="text-center mt-3">
            &copy; @DateTime.Now.Year - Bloop Fish Farm. All rights reserved.
        </div>
    </div>
</footer>

    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
    <script>
        // Cart functionality
        const cart = {
            items: [],
            addItem: function(id, name, price, quantity = 1) {
                const existingItem = this.items.find(item => item.id === id);
                
                if (existingItem) {
                    existingItem.quantity += quantity;
                } else {
                    this.items.push({ id, name, price, quantity });
                }
                
                this.updateCart();
                
                // Show notification
                const toast = document.createElement('div');
                toast.className = 'position-fixed top-0 end-0 p-3';
                toast.style.zIndex = '1070';
                toast.innerHTML = `
                    <div class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="d-flex">
                            <div class="toast-body">
                                <i class="fas fa-check-circle me-2"></i> ${name} added to cart
                            </div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                    </div>
                `;
                document.body.appendChild(toast);
                
                const bsToast = new bootstrap.Toast(toast.querySelector('.toast'));
                bsToast.show();
                
                setTimeout(() => {
                    toast.remove();
                }, 3000);
            },
            removeItem: function(id) {
                this.items = this.items.filter(item => item.id !== id);
                this.updateCart();
            },
            updateQuantity: function(id, quantity) {
                const item = this.items.find(item => item.id === id);
                if (item) {
                    item.quantity = parseInt(quantity);
                    if (item.quantity <= 0) {
                        this.removeItem(id);
                    } else {
                        this.updateCart();
                    }
                }
            },
            clearCart: function() {
                this.items = [];
                this.updateCart();
            },
            getTotalAmount: function() {
                return this.items.reduce((total, item) => total + (item.price * item.quantity), 0);
            },
            getTotalItems: function() {
                return this.items.reduce((total, item) => total + item.quantity, 0);
            },
            updateCart: function() {
                const cartCounter = document.getElementById('cartCounter');
                const totalItems = document.getElementById('totalItems');
                const totalAmount = document.getElementById('totalAmount');
                const cartItems = document.getElementById('cartItems');
                const checkoutBtn = document.getElementById('checkoutWhatsApp');
                
                const itemCount = this.getTotalItems();
                cartCounter.textContent = itemCount;
                totalItems.textContent = itemCount;
                totalAmount.textContent = `₦${this.getTotalAmount().toFixed(2)}`;
                
                if (itemCount > 0) {
                    checkoutBtn.disabled = false;
                    
                    let cartHTML = '';
                    this.items.forEach(item => {
                        cartHTML += `
                            <div class="cart-item" data-id="${item.id}">
                                <div class="d-flex justify-content-between">
                                    <h6>${item.name}</h6>
                                    <button class="btn btn-sm text-danger remove-item">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                                <div class="d-flex justify-content-between align-items-center mt-2">
                                    <div class="input-group input-group-sm" style="width: 120px">
                                        <button class="btn btn-outline-secondary decrease-qty" type="button">-</button>
                                        <input type="number" class="form-control text-center item-qty" value="${item.quantity}" min="1">
                                        <button class="btn btn-outline-secondary increase-qty" type="button">+</button>
                                    </div>
                                    <div class="text-end">
                                        <div>₦${item.price.toFixed(2)} × ${item.quantity}</div>
                                        <div class="fw-bold">₦${(item.price * item.quantity).toFixed(2)}</div>
                                    </div>
                                </div>
                            </div>
                        `;
                    });
                    cartItems.innerHTML = cartHTML;
                    
                    // Add event listeners for cart item interactions
                    document.querySelectorAll('.remove-item').forEach(btn => {
                        btn.addEventListener('click', function() {
                            const id = this.closest('.cart-item').dataset.id;
                            cart.removeItem(id);
                        });
                    });
                    
                    document.querySelectorAll('.decrease-qty').forEach(btn => {
                        btn.addEventListener('click', function() {
                            const id = this.closest('.cart-item').dataset.id;
                            const input = this.parentElement.querySelector('.item-qty');
                            input.value = Math.max(1, parseInt(input.value) - 1);
                            cart.updateQuantity(id, input.value);
                        });
                    });
                    
                    document.querySelectorAll('.increase-qty').forEach(btn => {
                        btn.addEventListener('click', function() {
                            const id = this.closest('.cart-item').dataset.id;
                            const input = this.parentElement.querySelector('.item-qty');
                            input.value = parseInt(input.value) + 1;
                            cart.updateQuantity(id, input.value);
                        });
                    });
                    
                    document.querySelectorAll('.item-qty').forEach(input => {
                        input.addEventListener('change', function() {
                            const id = this.closest('.cart-item').dataset.id;
                            cart.updateQuantity(id, this.value);
                        });
                    });
                } else {
                    checkoutBtn.disabled = true;
                    cartItems.innerHTML = `
                        <div class="cart-empty">
                            <i class="fas fa-shopping-cart fa-3x mb-3"></i>
                            <p>Your cart is empty</p>
                        </div>
                    `;
                }
                
                // Save cart to localStorage
                localStorage.setItem('bloopFishCart', JSON.stringify(this.items));
            },
            loadCart: function() {
                const savedCart = localStorage.getItem('bloopFishCart');
                if (savedCart) {
                    this.items = JSON.parse(savedCart);
                    this.updateCart();
                }
            }
        };
        
        // Initialize cart
        document.addEventListener('DOMContentLoaded', function() {
            cart.loadCart();
            
            // Handle WhatsApp checkout
            document.getElementById('checkoutWhatsApp').addEventListener('click', function() {
                const phoneNumber = '1234567890'; // Replace with your actual WhatsApp number
                
                let message = 'Hello, I would like to place an order:\n\n';
                cart.items.forEach(item => {
                    message += `${item.name} × ${item.quantity} = ₦${(item.price * item.quantity).toFixed(2)}\n`;
                });
                message += `\nTotal: ₦${cart.getTotalAmount().toFixed(2)}`;
                
                const encodedMessage = encodeURIComponent(message);
                window.open(`https://wa.me/${phoneNumber}?text=${encodedMessage}`, '_blank');
            });
            
            // Example function to add product to cart (to be called from product pages)
            window.addToCart = function(id, name, price, quantity = 1) {
                cart.addItem(id, name, price, quantity);
                const cartOffcanvas = new bootstrap.Offcanvas(document.getElementById('cartOffcanvas'));
                cartOffcanvas.show();
            };
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>